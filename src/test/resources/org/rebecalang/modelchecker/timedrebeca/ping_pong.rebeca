reactiveclass PingActor(3) {
    knownrebecs {
        PongActor po;
    }
    statevars {
    }

    PingActor() {
        self.ping();
    }
    @period(10)
    msgsrv ping() {
        self.test() deadline(5);
        delay(2);
        po.m2() deadline(5);
        po.m3() deadline(3);
        delay(2);
        self.ping() after(10) deadline(20);
    }

    msgsrv test() {

    }
}

reactiveclass PongActor(3) {
    knownrebecs {
       PingActor pi;
    }
    statevars {
    }

    PongActor() {
    }

    @period(12)
    msgsrv m2() {
    }

    @period(1)
    msgsrv m3() {
    }
}

main {
    @schedulingPolicy(EDF)
    PingActor p1(p2):();
    @schedulingPolicy(RMS)
    PongActor p2(p1):();
}